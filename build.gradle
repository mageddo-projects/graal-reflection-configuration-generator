plugins {
	id "maven"
	id "maven-publish"
	id "io.codearte.nexus-staging" version "0.21.1"
	id "de.marcphilipp.nexus-publish" version "0.4.0"
}

if(JavaVersion.current() != JavaVersion.VERSION_1_8){
	throw new UnsupportedOperationException("Please use JDK 8 to compile this project, current: ${JavaVersion.current()}")
}

allprojects {

	apply plugin: "java"

	repositories {
		mavenLocal()
		mavenCentral()
	}

	sourceCompatibility = JavaVersion.VERSION_1_7

	compileTestJava {
		sourceCompatibility = JavaVersion.VERSION_1_7
	}

}

dependencies {

	compile("org.apache.commons:commons-lang3:3.9")
	compile ("com.fasterxml.jackson.core:jackson-databind:2.10.1")
	compileOnly files(org.gradle.internal.jvm.Jvm.current().toolsJar)
//	compile("org.slf4j:slf4j-api:1.7.29")


	testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
	testCompile "org.junit.jupiter:junit-jupiter:5.4.2"
	testCompile "org.mockito:mockito-junit-jupiter:3.1.0"

}

test {
	useJUnitPlatform()
	testLogging {
		events "failed"
		exceptionFormat "full"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
	from javadoc
	archiveClassifier = 'javadoc'
}

artifacts {
	archives javadocJar, sourcesJar
}

nexusStaging {
	packageGroup = 'com.mageddo'
	username = project.findProperty("ossrhUsername")
	password = project.findProperty("ossrhPassword")
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from(components.java)
			artifact sourcesJar
			artifact javadocJar
			pom {
				name = project.name
				packaging = 'jar'
				description = project.description
				url = "${repositoryUrl}"

				scm {
					connection = "${repositoryUrl}"
					developerConnection = "${repositoryUrl}"
					url = "${repositoryUrl}"
				}

				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id = 'mageddo'
						name = 'Elvis Souza'
						email = 'edigitalb@gmail.com'
					}
				}
			}
		}
	}
}
nexusPublishing {
	repositories {
		sonatype()
	}
}

if (project.hasProperty("signing.keyId")) {
	apply plugin: 'signing'
	signing {
		sign publishing.publications.mavenJava
	}
}

task version(){
	println(project.version)
}
