plugins {
	id "com.gradle.plugin-publish" version "0.10.1"
	id "groovy"
	id "maven"
	id "org.jetbrains.gradle.plugin.idea-ext" version "0.4.2"
	id 'java-gradle-plugin'
}

allprojects {

	apply plugin: "java"

	repositories {
		mavenLocal()
		mavenCentral()
	}

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	compileTestJava {
		sourceCompatibility = JavaVersion.VERSION_11
		targetCompatibility = JavaVersion.VERSION_11
	}

	dependencies {
		testCompile group: 'junit', name: 'junit', version: '4.12'
	}

}

task fixIdeaPluginClasspath {
	doFirst {
		configure(tasks.pluginUnderTestMetadata) {
			def ideaClassesPath = project.buildDir.toPath().resolveSibling("out").resolve("production")
			def newClasspath = pluginClasspath as List
			newClasspath.add(0, ideaClassesPath)
			pluginClasspath.setFrom(newClasspath)
		}
	}
}
pluginUnderTestMetadata.mustRunAfter(fixIdeaPluginClasspath)

idea.project.settings {
	taskTriggers {
		beforeBuild fixIdeaPluginClasspath, pluginUnderTestMetadata
	}
}

archivesBaseName = project.name
group = "com.mageddo"
version '2.0.1'

dependencies {
	compile ("com.fasterxml.jackson.core:jackson-databind:2.9.8")
	compile ("com.mageddo:graal-reflection-configuration:2.0.0")
	compile ("org.reflections:reflections:0.9.11")
	compile gradleApi()
	compile localGroovy()
	testCompile gradleTestKit()
	testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
}

pluginBundle {

	website = "https://github.com/mageddo/graal-reflection-configuration-generator.git"
	vcsUrl = "https://github.com/mageddo/graal-reflection-configuration-generator.git"
	description = "Resolve your maven dependencies from a standalone embed maven local repository folder(on the project directory for example)"
	tags = ["java", "graal"]

	plugins {
		greetingsPlugin {
			id = "${group}.${project.name}"
			displayName = 'Generate Graal Relection Configuration file for all annotated classes'
		}
	}
}
